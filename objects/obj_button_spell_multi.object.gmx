<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_button_spell_sprout</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10001</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Spell selection for multiple units :)
scp_button_create();
//All the magic happens in the step event :)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scp_button_step();

//If the player selected exists then configure the spell button...
if ( instance_exists( obj_controller.player_id ) &amp;&amp; instance_exists(obj_player_parent) ) {
  //The script to run when the button is pressed :)
  //Override this variable to creat unique actions for your buttons...
  button_script = scp_button_spell;
  which_player = obj_controller.player_id.p_index;
  spell_selected = global.spell_selected[which_player];
  spell_reload = global.spell_reload[spell_selected]
  which_alarm = 6;  //Which alarm to trigger and wait for when firing

  //Configure spell to trigger and 
  if ( spell_selected == 0 ){
    spell_script = scp_spell_sprout;
    sprite_index = spr_button_spell_sprout;
  }
  if ( spell_selected == 1 ){
    spell_script = scp_spell_machine_gun;
    sprite_index = spr_button_spell_m_gun;
  }
  if ( spell_selected == 2 ){
    spell_script = scp_spell_water_slash;
    sprite_index = spr_button_spell_water_slash;
  }
  if ( spell_selected == 3 ){
    spell_script = scp_spell_roller;
    sprite_index = spr_button_spell_roller;
  }  

}
else {
  sprite_index = spr_button_empty;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scp_button_spell_draw();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
